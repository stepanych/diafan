/**
 * DIAFAN.CMS
 *
 * @author     diafan.ru
 * @version    7.0
 * @license http://www.diafan.ru/license.html
 * @copyright  Copyright (c) 2003-2021 OOO "Диафан". (http://www.diafan.ru/)
 */



tinymce.create('tinymce.plugins.DiafanImages', {
    init: function (ed, url) {
        // Register commands
        ed.addCommand('mceDiafanImages', function () {
           
            var frame = ed.windowManager.open({
				title:"Insert/edit image",
                file: images_str_replace('adm/htmleditor/tinymce/plugins/diafanimages', 'images/editor/', url, 1) + '?' + Math.random(),
                width: 710 + parseInt(ed.getLang('diafanimages.delta_width', 0)),
                height: 500 + parseInt(ed.getLang('diafanimages.delta_height', 0)),
                inline: true,
                popup_css: false
            }, {
                plugin_url: url
            });
            
             window.diafan_activeEditor = ed;
             window.diafan_activeFrame = frame;
        });
        // Register buttons
        ed.addButton('diafanimages', {
            title: 'Diafan Images Plugin',
            cmd: 'mceDiafanImages',
            stateSelector:'img',
        });
        
        ed.addMenuItem("diafanimages", {
            icon:'image', 
            text:"Insert/edit image", 
            cmd:"mceDiafanImages", 
            context:"insert"
        });

       
    },
    getInfo: function () {
        return {
            longname: 'Diafan Images Plugin',
            author: 'www.diafan.ru',
            authorurl: 'http://www.diafan.ru',
            infourl: 'http://www.diafan.ru/',
            version: '6.0'
        };
    }
});

// Register plugin
tinymce.PluginManager.add('diafanimages', tinymce.plugins.DiafanImages);


function images_str_replace(search, replace, subject, count) {
    f = [].concat(search),
            r = [].concat(replace),
            s = subject,
            ra = r instanceof Array, sa = s instanceof Array;
    s = [].concat(s);
    if (count) {
        this.window[count] = 0;
    }
    for (i = 0, sl = s.length; i < sl; i++) {
        if (s[i] === '') {
            continue;
        }
        for (j = 0, fl = f.length; j < fl; j++) {
            temp = s[i] + '';
            repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
            s[i] = (temp).split(f[j]).join(repl);
            if (count && s[i] !== temp) {
                this.window[count] += (temp.length - s[i].length) / f[j].length;
            }
        }
    }
    return sa ? s : s[0];
}
